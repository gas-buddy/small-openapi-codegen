openapi: 3.0.1
info:
  title: Comprehensive Validation Test Cases
  description: Test spec with various validation test cases including 'default' properties in different locations
  version: 1.0.0
servers:
  - url: /v1
paths:
  # ----- BASIC ENDPOINTS -----
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      responses:
        200:
          description: A list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      summary: Create a pet
      operationId: createPet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        201:
          description: Pet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'

  # ----- DEFAULT PROPERTY IN REQUEST BODY -----
  /orders:
    post:
      summary: Create an order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                # 'default' in request body
                default:
                  type: string
                  description: Default property in request body
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      # Nested in array items
                      default:
                        type: string
      responses:
        201:
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  
  # ----- DEFAULT PROPERTY IN FORM DATA -----
  /form-data:
    post:
      summary: Form data with default property
      operationId: formDataWithDefault
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name: 
                  type: string
                # 'default' in form data
                default:
                  type: string
      responses:
        200:
          description: Success

  # ----- DEEPLY NESTED DEFAULT PROPERTY -----
  /nested:
    get:
      summary: Nested object with default
      operationId: getNestedDefault
      responses:
        200:
          description: Response with nested default
          content:
            application/json:
              schema:
                type: object
                properties:
                  level1:
                    type: object
                    properties:
                      level2:
                        type: object
                        properties:
                          # Deeply nested default
                          default:
                            type: string

  # ----- RESPONSE WITH DEFAULT -----
  /response-with-default:
    get:
      summary: Response containing default property
      operationId: getResponseWithDefault
      responses:
        200:
          description: Response with default property
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  default:
                    type: boolean
                    description: Default property in response

components:
  schemas:
    Pet:
      type: object
      description: A pet
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        
    # ----- ORDER WITH ONEOF CONTAINING DEFAULT -----
    Order:
      type: object
      description: An order
      properties:
        id:
          type: integer
          format: int64
        items:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Item'
              - type: object
                properties:
                  # Default in oneOf
                  default:
                    type: string

    # ----- ITEM WITH ALLOF CONTAINING DEFAULT -----
    Item:
      type: object
      properties:
        id:
          type: integer
        details:
          type: object
          allOf:
            - type: object
              properties:
                # Default in allOf
                default:
                  type: string
            - $ref: '#/components/schemas/ItemDetails'

    # ----- BASIC SCHEMA WITH DEFAULT PROPERTY -----
    ItemDetails:
      type: object
      properties:
        name:
          type: string
        # Basic default property
        default:
          type: boolean
          
    # ----- ANYOF WITH DEFAULT -----
    Product:
      type: object
      properties:
        variants:
          type: object
          anyOf:
            - type: object
              properties:
                type:
                  type: string
                # Default in anyOf
                default:
                  type: string
    
    # ----- DIFFERENT CASE VARIANT -----
    CaseSensitiveTest:
      type: object
      properties:
        # Different case of 'default'
        DEFAULT:
          type: string
          description: Property with uppercase 'DEFAULT'